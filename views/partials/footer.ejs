<footer class="text-center" style="background-color: black; border: 1px; border-style:dashed; border-color: aliceblue;">
  <!-- Grid container -->
  <div class="container m-0">
    <!-- Section: Social media -->
    <section>
      <div class="row">
        <div class="col-sm-7 text-left p-0">
          <!-- Facebook -->
          <a data-mdb-ripple-init class="btn btn-outline btn-floating m-1" href="https://www.facebook.com/"
            target=”_blank” role="button"><i class="fab fa-facebook-f"></i></a>

          <!-- Twitter -->
          <a data-mdb-ripple-init class="btn btn-outline btn-floating m-1" href="https://twitter.com/?lang=en"
            target=”_blank” role="button"><i class="fab fa-twitter"></i></a>

          <!-- Google -->
          <a data-mdb-ripple-init class="btn btn-outline btn-floating m-1" href="https://mail.google.com/"
            target=”_blank” role="button"><i class="fab fa-google"></i></a>

          <!-- Instagram -->
          <a data-mdb-ripple-init class="btn btn-outline btn-floating m-1" href="https://www.instagram.com/"
            target=”_blank” role="button"><i class="fab fa-instagram"></i></a>

          <!-- Linkedin -->
          <a data-mdb-ripple-init class="btn btn-outline btn-floating m-1" href="https://www.linkedin.com/in/annurag09/"
            target=”_blank” role="button"><i class="fab fa-linkedin-in"></i></a>

          <!-- Github -->
          <a data-mdb-ripple-init class="btn btn-outline btn-floating m-1" href="https://github.com/Annurag99"
            target=”_blank” role="button"><i class="fab fa-github"></i></a>
        </div>
      </div>
    </section>

    <section id="contact">
      <div>
        <div class="row">
          <div class="col-sm-6 text-left">
            <div class="contact-detail-box" style="color: aliceblue;">
              <i class="far fa-envelope text-dark fa-3x"></i>
              <h4>Contact Us</h4>
              <abbr title="Phone">Mobile:</abbr> (+353) 087 603 2994<br>
              Email: <a href="mailto:x23180013@student.ncirl.ie" class="text-muted">cryptomart@yahoo.com</a>
            </div>
          </div>

          <div class="col-sm-6 text-right">
            <div class="contact-detail-box">
              <i class="fa fa-map-marker fa-3x text-dark"></i>
              <h4 style="color: aliceblue;">Our Location</h4>

              <address style="color: aliceblue;">
                MANAGEMENT SUITE, HENRY ST,<br />
                NORTH CITY, DUBLIN, D01 E6P5<br />
              </address>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="col-sm-8 p-2">
            <div class="contact-map">
              <iframe
                src="https://www.google.com/maps/embed/v1/place?q=ilac&amp;key=AIzaSyBSFRN6WWGYwmFi498qXXsD2UwkbmD74v4"
                frameborder="0" scrolling="no" style="width: 100%; height: 360px;" title="Crypto Mart Location">
              </iframe>
            </div>
          </div><!-- end col -->

          <!-- Contact form -->
          <div class="col-sm-4">
            <form role="form" name="ajax-form" id="ajax-form" method="post" class="form-main" action="#">
              <div class="form-group">
                <label for="name2" style="float: left; color: aliceblue;">Name</label>
                <input class="form-control" id="name2" name="name" type="text" placeholder="Please enter your name">
                <div class="error" id="err-name" style="display: none;">Please enter name</div>
              </div> <!-- /Form-name -->

              <div class="form-group">
                <label for="email2" style="float: left; color: aliceblue;">Email</label>
                <input class="form-control" id="email2" name="email" type="text" placeholder="Please enter your email">
                <div class="error" id="err-emailvld" style="display: none;">E-mail is not a valid format
                </div>
              </div> <!-- /Form-email -->

              <div class="form-group">
                <label for="message2" style="float: left; color: aliceblue;">Message</label>
                <textarea class="form-control" id="message2" name="message" rows="5"
                  placeholder="Please enter message or feedback"></textarea>

                <div class="error" id="err-message" style="display: none;">Please enter message or
                  feedback</div>
              </div> <!-- /col -->

              <div class="row" style="float: right;margin-right: 1px;">
                <!-- Add an onclick event handler to call a JavaScript function when the button is clicked -->
                <button type="submit" class="btn btn-info" id="send" onclick="showSuccessAlert()">Send</button>
              </div> <!-- /col -->
              </form> <!-- /form -->
              <script>
                // Function to show alert when the form is submitted
                function showAlert() {
                  alert("Thanks for your response!");
                }
              </script>
        </div>
      </div> <!-- end row -->
  </div>
  </section>
  </div>
  <!-- Copyright -->
  <div class="text-center p-3 mt-4" style="color: aliceblue;">
    © 2024 Copyright:
    <a class="text-reset fw-bold" style="color: aliceblue;" href="https://github.com/Annurag99">CryptoMart</a>
  </div>
  <!-- Copyright -->
</footer>
<script> // the below script code is convention in web3 in forming the communication with Web

  let account;
  const connectMetamask = async () => {
    if (window.ethereum !== "undefined") {
      const accounts = await ethereum.request({ method: "eth_requestAccounts" });
      account = accounts[0];
      document.getElementById("userArea").innerHTML = `User Account: ${account}`;
      document.getElementById("login-name").innerHTML = `Welcome, ${account}`;
      sessionStorage.setItem("username", account);
      document.getElementById("login-button").style.display = "none";
    }
  }

  const connectContract = async () => {
    // My contract ABI
    const ABI = [
      {
        "inputs": [],
        "name": "deposit",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address payable",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getBalance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ];

    const address = "0x5f169041a35ef3489c2ff1aca65a07c4400062a0"; // contract address
    window.web3 = await new Web3(window.ethereum);
    window.contract = await new window.web3.eth.Contract(ABI, address);
    document.getElementById("contractArea").innerHTML = "Connected to Contract"; // calling the elementID above
  }

  const getContractAccount = async () => {
    const data = await window.contract.methods.getAddress().call();
    document.getElementById("contractAccount").innerHTML = `Contract Account: ${data}`;
  }

  const getBalanceApple = async () => { // const getBalanceApple is the HTML function & .contract.getBalance is the smart contract function
    const data = await window.contract.methods.getBalance().call();
    document.getElementById("balanceArea").innerHTML = `Contract Balance: ${data}`;
  }

  const depositContract = async (amount) => {
    await window.contract.methods.deposit().send({ from: sessionStorage.getItem("username"), value: amount });
  }

  const withdraw = async (amount) => {
    const address = '0xC04BDC579718e7F6c82FAFB79ed3C39396a20a43'; // metamask wallet
    await window.contract.methods.withdraw(address, amount).send({ from: sessionStorage.getItem("username") });
  }
</script>

</body>
</html>
